/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-03-13 10:14:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.authentication;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class signUp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Sign Up - Mega City Cab</title>\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\n");
      out.write("    <style>\n");
      out.write("        /* General Styles */\n");
      out.write("        body {\n");
      out.write("            font-family: Arial, sans-serif;\n");
      out.write("            background-color: #000000; /* Black background */\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            display: flex;\n");
      out.write("            flex-direction: column;\n");
      out.write("            justify-content: center;\n");
      out.write("            align-items: center;\n");
      out.write("            min-height: 100vh;\n");
      out.write("        }\n");
      out.write("  <div class=\"image-container\">\n");
      out.write("        <img src=\"../images/logo.png\" alt=\"logo Image\" class=\"logo-image\">\n");
      out.write("\n");
      out.write("        /* Logo Styles */\n");
      out.write("        .logo {\n");
      out.write("            text-align: center;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .logo img {\n");
      out.write("            height: 120px; /* Adjust logo size */\n");
      out.write("            width: auto;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Signup Container Styles */\n");
      out.write("        .signup-container {\n");
      out.write("            background-color: #FFD700; /* Yellow background */\n");
      out.write("            padding: 2rem;\n");
      out.write("            border-radius: 10px;\n");
      out.write("            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n");
      out.write("            width: 100%;\n");
      out.write("            max-width: 600px; /* Increased width for better spacing */\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .signup-container h2 {\n");
      out.write("            margin-bottom: 1.5rem;\n");
      out.write("            color: #000000; /* Black text */\n");
      out.write("            font-size: 1.8rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Form Styles */\n");
      out.write("        .form-row {\n");
      out.write("            display: flex;\n");
      out.write("            gap: 1rem; /* Spacing between columns */\n");
      out.write("            margin-bottom: 1.5rem; /* Spacing between rows */\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-group {\n");
      out.write("            flex: 1; /* Each group takes equal space */\n");
      out.write("            text-align: left;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        label {\n");
      out.write("            display: block;\n");
      out.write("            margin-bottom: 0.5rem;\n");
      out.write("            color: #000000; /* Black text */\n");
      out.write("            font-weight: bold;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        input[type=\"text\"],\n");
      out.write("        input[type=\"email\"],\n");
      out.write("        input[type=\"tel\"],\n");
      out.write("        input[type=\"password\"] {\n");
      out.write("            width: 90%; /* Smaller input fields */\n");
      out.write("            padding: 0.8rem;\n");
      out.write("            border: 1px solid #ccc;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            font-size: 1rem;\n");
      out.write("            transition: border-color 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        input:focus {\n");
      out.write("            border-color: #000000; /* Black border on focus */\n");
      out.write("            outline: none;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        button[type=\"submit\"] {\n");
      out.write("            width: 100%;\n");
      out.write("            padding: 0.8rem;\n");
      out.write("            background-color: #000000; /* Black background */\n");
      out.write("            color: #FFD700; /* Yellow text */\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            font-size: 1rem;\n");
      out.write("            cursor: pointer;\n");
      out.write("            transition: background-color 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        button:hover {\n");
      out.write("            background-color: #333333; /* Darker black on hover */\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Signin Text Styles */\n");
      out.write("        .signin-text {\n");
      out.write("            margin-top: 1.5rem;\n");
      out.write("            color: #000000; /* Black text */\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .signin-text a {\n");
      out.write("            color: #000000; /* Black text */\n");
      out.write("            text-decoration: underline; /* Underline for links */\n");
      out.write("            font-weight: bold;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .signin-text a:hover {\n");
      out.write("            color: #333333; /* Darker black on hover */\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("    <!-- Logo -->\n");
      out.write("    <div class=\"logo\">\n");
      out.write("        <img src=\"images/logo.png\" alt=\"Mega City Cab Logo\">\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Signup Container -->\n");
      out.write("    <div class=\"signup-container\">\n");
      out.write("        <h2>Sign Up</h2>\n");
      out.write("\n");
      out.write("        <form id=\"signupForm\">\n");
      out.write("            <!-- First Row: First Name and Last Name -->\n");
      out.write("            <div class=\"form-row\">\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                    <label for=\"firstName\">First Name:</label>\n");
      out.write("                    <input type=\"text\" id=\"firstName\" name=\"firstName\" required>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                    <label for=\"lastName\">Last Name:</label>\n");
      out.write("                    <input type=\"text\" id=\"lastName\" name=\"lastName\" required>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Second Row: Email and NIC -->\n");
      out.write("            <div class=\"form-row\">\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                    <label for=\"email\">Email:</label>\n");
      out.write("                    <input type=\"email\" id=\"email\" name=\"email\" required>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                    <label for=\"nic\">NIC:</label>\n");
      out.write("                    <input type=\"text\" id=\"nic\" name=\"nic\" required>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Third Row: Telephone and Address -->\n");
      out.write("            <div class=\"form-row\">\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                    <label for=\"telephone\">Telephone:</label>\n");
      out.write("                    <input type=\"tel\" id=\"telephone\" name=\"telephone\" required>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                    <label for=\"address\">Address:</label>\n");
      out.write("                    <input type=\"text\" id=\"address\" name=\"address\" required>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Fourth Row: Password -->\n");
      out.write("            <div class=\"form-row\">\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                    <label for=\"password\">Password:</label>\n");
      out.write("                    <input type=\"password\" id=\"password\" name=\"password\" required>\n");
      out.write("                </div>\n");
      out.write("                <!-- Empty div to maintain alignment -->\n");
      out.write("                <div class=\"form-group\"></div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Submit Button -->\n");
      out.write("            <button type=\"submit\">Sign Up</button>\n");
      out.write("        </form>\n");
      out.write("        \n");
      out.write("        <p class=\"signin-text\">Already a member? <a href=\"signIn.html\">Sign In</a></p>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("        // Simulate registration logic\n");
      out.write("        document.getElementById(\"signupForm\").addEventListener(\"submit\", function(event) {\n");
      out.write("            event.preventDefault(); // Prevent the default form submission\n");
      out.write("\n");
      out.write("            // Get form data\n");
      out.write("            const firstName = document.getElementById(\"firstName\").value;\n");
      out.write("            const lastName = document.getElementById(\"lastName\").value;\n");
      out.write("            const email = document.getElementById(\"email\").value;\n");
      out.write("            const nic = document.getElementById(\"nic\").value;\n");
      out.write("            const telephone = document.getElementById(\"telephone\").value;\n");
      out.write("            const address = document.getElementById(\"address\").value;\n");
      out.write("            const password = document.getElementById(\"password\").value;\n");
      out.write("\n");
      out.write("            // Simulate successful registration\n");
      out.write("            if (email && password) {\n");
      out.write("                // Store user data (in a real-world application, this should be sent to the backend)\n");
      out.write("                localStorage.setItem('user', JSON.stringify({\n");
      out.write("                    firstName,\n");
      out.write("                    lastName,\n");
      out.write("                    email,\n");
      out.write("                    nic,\n");
      out.write("                    telephone,\n");
      out.write("                    address,\n");
      out.write("                    password\n");
      out.write("                }));\n");
      out.write("\n");
      out.write("                // Display success message using SweetAlert\n");
      out.write("                Swal.fire({\n");
      out.write("                    icon: 'success',\n");
      out.write("                    title: 'Registration Successful!',\n");
      out.write("                    text: 'You have been successfully registered.',\n");
      out.write("                    timer: 2500,\n");
      out.write("                    showConfirmButton: false\n");
      out.write("                }).then(() => {\n");
      out.write("                    // Redirect to the sign-in page after success\n");
      out.write("                    window.location.href = 'signIn.jsp';\n");
      out.write("                });\n");
      out.write("            } else {\n");
      out.write("                // Display failure message using SweetAlert\n");
      out.write("                Swal.fire({\n");
      out.write("                    icon: 'error',\n");
      out.write("                    title: 'Registration Failed!',\n");
      out.write("                    text: 'Please ensure all fields are filled out correctly.',\n");
      out.write("                    confirmButtonColor: '#d33'\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
