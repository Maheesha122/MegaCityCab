/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-03-14 14:55:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.customer;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class help_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/customer/navBar.jsp", Long.valueOf(1741964034581L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Home</title>\r\n");
      out.write("<style>\r\n");
      out.write("    /* Internal CSS for the home page */\r\n");
      out.write("    body {\r\n");
      out.write("        font-family: Arial, sans-serif;\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        background-color: #f8f9fa; /* Light background color */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h1 {\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        color: black;\r\n");
      out.write("        background-color: yellow;\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .faq-container {\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        margin: 20px auto;\r\n");
      out.write("        max-width: 800px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .faq-container h2 {\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        color: black;\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .faq-item {\r\n");
      out.write("        margin-bottom: 15px;\r\n");
      out.write("   3 {\r\n");
      out.write("        color: yellow;\r\n");
      out.write("        background-color: black;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .faq-item p {\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        background-color: #f8f9fa;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .image-container {\r\n");
      out.write("        position: relative;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .background-image {\r\n");
      out.write("        width: 100%; /* Make main image fit the screen width */\r\n");
      out.write("        height: auto;\r\n");
      out.write("        display: block;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .overlay {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top: 40%; /* Adjusted to move text higher */\r\n");
      out.write("        left: 50%;\r\n");
      out.write("        transform: translate(-50%, -50%);\r\n");
      out.write("        background-color: rgba(0, 0, 0, 0.7); /* Black rectangle with some transparency */\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .overlay a {\r\n");
      out.write("        display: inline-block;\r\n");
      out.write("        background-color: yellow;\r\n");
      out.write("        color: black;\r\n");
      out.write("        padding: 10px 20px;\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("        font-size: 18px;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        margin-top: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .overlay a:hover {\r\n");
      out.write("        background-color: black;\r\n");
      out.write("        color: yellow;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .vehicles-image {\r\n");
      out.write("        width: 100%; /* Make vehicle image fit the screen width */\r\n");
      out.write("        height: auto;\r\n");
      out.write("        display: block;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Navigation Bar</title>\r\n");
      out.write("<style>\r\n");
      out.write("    /* Internal CSS for the navbar */\r\n");
      out.write("    body {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        font-family: Arial, sans-serif;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .navbar {\r\n");
      out.write("        background-color: black;\r\n");
      out.write("        overflow: hidden;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        justify-content: space-between; /* Space between logo and links */\r\n");
      out.write("        padding: 0 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .navbar a {\r\n");
      out.write("        color: #FFD700; /* Darker yellow */\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        padding: 20px 25px; /* Increased spacing */\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("        font-size: 17px;\r\n");
      out.write("        font-weight: bold; /* Stronger links */\r\n");
      out.write("        text-transform: uppercase; /* Uppercase text */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .navbar a.logo {\r\n");
      out.write("        padding: 5px; /* Adjust padding for the logo */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .navbar a.logo img {\r\n");
      out.write("        height: 80px; /* Larger logo */\r\n");
      out.write("        vertical-align: middle;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .navbar .nav-links {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <!-- Navbar -->\r\n");
      out.write("    <div class=\"navbar\">\r\n");
      out.write("        <!-- Logo linking to home page -->\r\n");
      out.write("        <a href=\"home.html\" class=\"logo\">\r\n");
      out.write("            <img src=\"../images/logo.png\" alt=\"Logo\">\r\n");
      out.write("        </a>\r\n");
      out.write("\r\n");
      out.write("        <!-- Navbar links aligned to the right -->\r\n");
      out.write("        <div class=\"nav-links\">\r\n");
      out.write("            <a href=\"home.jsp\">Home</a>\r\n");
      out.write("            <a href=\"booking.jsp\">Booking</a>\r\n");
      out.write("            <a href=\"help.jsp\">Help</a>\r\n");
      out.write("            <a href=\"my_bookings.html\">My Bookings</a>\r\n");
      out.write("            <a href=\"../authentication/signIn.jsp\" id=\"authLink\">Login</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // Simulated session data (Replace with actual authentication logic)\r\n");
      out.write("        const loggedInUser = localStorage.getItem(\"user_email\");\r\n");
      out.write("        const authLink = document.getElementById(\"authLink\");\r\n");
      out.write("\r\n");
      out.write("        if (loggedInUser) {\r\n");
      out.write("            authLink.textContent = \"Logout\";\r\n");
      out.write("            authLink.href = \"signout.jsp\";\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"faq-container\">\r\n");
      out.write("        <h2>FAQs</h2>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"faq-item\">\r\n");
      out.write("            <h3>1. Do I need to pay in advance?</h3>\r\n");
      out.write("            <p>No, pay as you go. You can pay after the journey ends.</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"faq-item\">\r\n");
      out.write("            <h3>2. Can I cancel my booking?</h3>\r\n");
      out.write("            <p>Yes, you can cancel your booking up to 30 minutes before your ride without any charges by prior notice with a phone call.</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"faq-item\">\r\n");
      out.write("            <h3>3. What payment methods are accepted?</h3>\r\n");
      out.write("            <p>We accept cash, credit/debit cards, and digital wallets.</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"faq-item\">\r\n");
      out.write("            <h3>4. Are there any additional charges?</h3>\r\n");
      out.write("            <p>No hidden charges! The fare you see is the final price.</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"faq-item\">\r\n");
      out.write("            <h3>5. How do I contact customer support?</h3>\r\n");
      out.write("            <p>You can reach us via our hotline or email us at support@megacitycab.com.</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"faq-item\">\r\n");
      out.write("            <h3>6. Can I request a specific driver?</h3>\r\n");
      out.write("            <p>Yes, if your preferred driver is available, we can arrange that for you.</p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
